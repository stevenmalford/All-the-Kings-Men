<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sRune5_Neutral</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alpha_level = random_range(0,1);
alpha_increment = 0.01;

alarm[0] = 360;
state = runeState.Neutral;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>runeChance = irandom_range(1,10)
alarm[0] = 360;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alpha_level += alpha_increment;

if(alpha_level &lt; 0 || alpha_level &gt; 1)
{
    alpha_increment = -alpha_increment;
}

if(instance_exists(oKeeper_Archives))
{
    if(oKeeper_Archives.state = bossState.Phase1)
    {
        state = runeState.Neutral;
    }
    
    else if(oKeeper_Archives.state = bossState.Phase2)
    {
        //runeChance = irandom_range(1,10);
        if(alarm[0] = 360)
        {
            if(runeChance &lt;= 7)
            {
                state = runeState.Positive;
            }
            else
            {
                state = runeState.Neutral;
            }
        }
    }
    
    else if(oKeeper_Archives.state = bossState.Phase3)
    {
        //runeChance = irandom_range(1,10);
        if(alarm[0] = 360)
        {
            if(runeChance &lt;= 4)
            {
                state = runeState.Positive;
            }
            else if(runeChance &gt; 4 &amp;&amp; runeChance &lt;= 8)
            {
                state = runeState.Negative;
            }
            else
            {
                state = runeState.Neutral;
            }
        }
    }
    else if(oKeeper_Archives.state = bossState.Dead)
    {
        state = runeState.Neutral;
    }
}

switch(state)
{
    case runeState.Neutral:
        break;
    
    case runeState.Positive:
        if(collision_circle(x + 16, y + 16, 8, oPlayer, false, false))
        {
            oPlayer.shieldDebuff = true;
            state = runeState.Neutral;
        }
        
        break;
    
    case runeState.Negative:
        if(collision_circle(x + 16, y + 16, 8, oPlayer, false, false))
        {
            oKeeper_Archives.damage += 10;
            oPlayer.currentHP -= 20;
            state = runeState.Neutral;
        }
        break;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(state = runeState.Neutral)
{
    draw_sprite_ext(sRune5_Neutral, 0, x, y, 1, 1, 0, c_white, 1);

    draw_set_blend_mode(bm_add);
    draw_sprite_ext(sRune5_Neutral_Blur, 0, x, y, 1, 1, 0, c_white, alpha_level);

    draw_set_blend_mode(bm_normal);
}
else if(state = runeState.Positive)
{
    draw_sprite_ext(sRune5_Positive, 0, x, y, 1, 1, 0, c_white, 1);

    draw_set_blend_mode(bm_add);
    draw_sprite_ext(sRune5_Positive_Blur, 0, x, y, 1, 1, 0, c_white, alpha_level);

    draw_set_blend_mode(bm_normal);
}
else if(state = runeState.Negative)
{
    draw_sprite_ext(sRune5_Negative, 0, x, y, 1, 1, 0, c_white, 1);

    draw_set_blend_mode(bm_add);
    draw_sprite_ext(sRune5_Negative_Blur, 0, x, y, 1, 1, 0, c_white, alpha_level);

    draw_set_blend_mode(bm_normal);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
